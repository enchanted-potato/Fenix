version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.3.0

jobs:
  tests-and-formatting:
    docker:
      - image: cimg/python:3.10.2
    environment:
      POETRY_VERSION: 1.3.1
    steps:
      - checkout
      - run:
          name: Install poetry and dependencies
          command: |
            curl -sSL https://install.python-poetry.org | python3
            export PATH=/root/.local/bin:$PATH
            poetry config virtualenvs.create false
            poetry install --no-interaction --no-ansi
      - run:
          name: Run pytest
          command: poetry run pytest
      - store_test_results:
          path: test-results
      - run:
          name: Run black
          command: |
            poetry run black --check .
            poetry run black --diff .
  aws-ecr:
    docker:
      - image: cimg/base:stable # use a base image with docker pre-installed
    steps:
      - setup_remote_docker:
          version: 20.10.11
      - aws-ecr/build-and-push-image: # uses the aws-ecr orb
          dockerfile: Dockerfile # all aws credentials saved in Circle CI
          repo: fenix-ecr-repo # ecr repo from aws
          tag: latest,$CIRCLE_SHA1
  deploy:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: Deploy via terraform
          command: |
            cd tf
            terraform init
            terraform apply -input=false -auto-approve -var "image_tag=${CIRCLE_SHA1}"

workflows:
  version: 2
  build:
    jobs:
      - tests-and-formatting
      - aws-ecr:
          requires:
            - tests-and-formatting
      - deploy:
          requires:
            - aws-ecr
